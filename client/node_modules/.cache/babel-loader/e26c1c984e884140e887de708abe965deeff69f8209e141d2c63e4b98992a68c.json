{"ast":null,"code":"var _jsxFileName = \"/Users/rohitchavan/Downloads/DigitalFlake MERN Dashboard/client/src/context/Authcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport axios from 'axios';\n\n// Creating AuthContext to manage authentication state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to easily access AuthContext data\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null); // Store user data\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null); // Store JWT token\n\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`; // Set token in axios headers for future requests\n      axios.get('http://localhost:8000/api/user/current-user') // Backend route to get user details\n      .then(response => setUser(response.data)) // If user is found, update the user state\n      .catch(error => {\n        console.error(\"Error fetching user data:\", error);\n        setUser(null);\n        setToken(null);\n        localStorage.removeItem(\"token\"); // Clear the token from localStorage if there’s an error\n      });\n    }\n  }, [token]); // Re-run this effect when the token changes\n\n  // Login function to authenticate the user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/user/auth', {\n        email,\n        password\n      }); // POST request for login\n      const {\n        token,\n        user\n      } = response.data; // Destructure token and user from response\n      setToken(token); // Store token in state\n      setUser(user); // Store user in state\n      localStorage.setItem(\"token\", token); // Store token in localStorage for persistence\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      console.log(user, token); // Set Authorization header for future requests\n    } catch (error) {\n      console.error(\"Login failed:\", error); // Handle login failure\n    }\n  };\n\n  // Logout function to remove authentication data\n  const logout = async () => {\n    try {\n      // Call the logout endpoint\n      setUser(null); // Clear user data\n      setToken(null); // Clear token\n      localStorage.removeItem(\"token\"); // Remove token from localStorage\n      delete axios.defaults.headers.common[\"Authorization\"]; // Remove Authorization header from Axios\n    } catch (error) {\n      console.error(\"Logout failed:\", error); // Handle logout failure\n    }\n  };\n  const EmailPass = async email => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/user/forgot-password', {\n        email\n      });\n      if (response !== null && response !== void 0 && response.message) {\n        alert('Mail is being sent');\n      }\n    } catch (err) {\n      console.error('Cannot send the mail');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout,\n      EmailPass\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"eNbUtTvdgxCMZ7p5xoW/6TChMg8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","defaults","headers","common","get","then","response","data","catch","error","console","removeItem","login","email","password","post","setItem","log","logout","EmailPass","message","alert","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rohitchavan/Downloads/DigitalFlake MERN Dashboard/client/src/context/Authcontext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport axios from 'axios';\n\n// Creating AuthContext to manage authentication state\nconst AuthContext = createContext();\n\n// Custom hook to easily access AuthContext data\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // Store user data\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null); // Store JWT token\n\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`; // Set token in axios headers for future requests\n      axios.get('http://localhost:8000/api/user/current-user') // Backend route to get user details\n        .then(response => setUser(response.data)) // If user is found, update the user state\n        .catch(error => {\n          console.error(\"Error fetching user data:\", error);\n          setUser(null);\n          setToken(null);\n          localStorage.removeItem(\"token\"); // Clear the token from localStorage if there’s an error\n        });\n    }\n  }, [token]); // Re-run this effect when the token changes\n\n  // Login function to authenticate the user\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/user/auth', { email, password }); // POST request for login\n      const { token, user } = response.data; // Destructure token and user from response\n      setToken(token); // Store token in state\n      setUser(user); // Store user in state\n      localStorage.setItem(\"token\", token); // Store token in localStorage for persistence\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n      console.log(user,token) // Set Authorization header for future requests\n    } catch (error) {\n      console.error(\"Login failed:\", error); // Handle login failure\n    }\n  };\n\n  // Logout function to remove authentication data\nconst logout = async () => {\n  try {\n                  // Call the logout endpoint\n      setUser(null); // Clear user data\n      setToken(null); // Clear token\n      localStorage.removeItem(\"token\"); // Remove token from localStorage\n      delete axios.defaults.headers.common[\"Authorization\"]; // Remove Authorization header from Axios\n  } catch (error) {\n      console.error(\"Logout failed:\", error); // Handle logout failure\n  }\n};\n\nconst EmailPass = async (email)=>{\n  try{\nconst response = await axios.post('http://localhost:8000/api/user/forgot-password',{email});\nif(response?.message){\n  alert('Mail is being sent')\n}\n}catch(err){\n    console.error('Cannot send the mail')\n  }\n}\n  return (\n    <AuthContext.Provider value={{ user, token, login, logout,EmailPass }}>\n      {children} {/* Render children components that are wrapped with AuthProvider */}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}